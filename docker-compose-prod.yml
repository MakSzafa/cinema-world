version: '3.3'

volumes:
  filmarket_prod_data: {}
  backend_static: {}
  backend_media: {}

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: production_backend
    depends_on:
      - postgres
    volumes:
      - backend_static:/app/static
      - backend_media:/app/media
      - ./backend:/app
    command: /start_prod
    restart: always
    env_file: ./backend/.env
    ports:
      - "8000:8000"
    networks:
      filmarket_network:
        ipv4_address: 172.22.0.2

  frontend:
    build:  
      context: ./frontend
      dockerfile: Dockerfile
    container_name: production_frontend
    depends_on:
      - backend
    volumes:
      - backend_static:/app/static
      - backend_media:/app/media
      - ./frontend:/app
      - ./frontend/nginx:/etc/nginx/conf.d
    restart: always
    env_file: ./backend/.env
    ports:
      - 8080:8080
    environment: 
      - CHOKIDAR_USEPOLLING=true
    networks:
      filmarket_network:
        ipv4_address: 172.22.0.3

  postgres:
    image: postgres:15.1
    container_name: production_db
    volumes:
      - filmarket_prod_data:/var/lib/postgresql/data
    restart: always
    env_file: ./backend/.env
    ports:
      - 5432:5432
    networks:
      filmarket_network:
        ipv4_address: 172.22.0.4

networks:
  filmarket_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1